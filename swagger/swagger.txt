swagger: '2.0'
info:
  version: '1.0.0'
  title: "Task Tracker API"
  description:  Allow users to easily create and categorize tasks. Include fields for task names, due dates, priorities, and descriptions. 
                Enable users to create and organize task lists or categories, such as work, home, or personal. 
                Users can switch between lists to manage different aspects of their lives.
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: tasktracker.apiblueprint.org
basePath: /v1
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /tasks:
    x-summary: Task List
    get:
      summary: Get the list of tasks
      description: Gets the list of Tasks
      produces: 
        - application/json
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/TaskItem'
          examples:
            application/json:
              - id: "1"
                title: "Start new project"
                description: "Start next iOS project"
                category: "Work"
                priority: "High"
                status: "Not Started"
                taskDate:
                  startDate: ""
                  dueDate: "23 Nov 2023"
                  finishDate: ""
                updates:
                  - id: "1"
                    text: Started
                  - id: "2"
                    text: Added project requirement
                  - id: "3"
                    text: Started coding
                  - id: "4"
                    text: Testing
                  - id: "5"
                    text: Completed
              
              - id: "2"
                title: "Review Code"
                description: "Review the code changes before merging"
                category: "Work"
                priority: "Medium"
                status: "Overdue"
                taskDate:
                  startDate: ""
                  dueDate: "20 Nov 2023"
                  finishDate: ""
                updates:
                  - id: "1"
                    text: "Code review pending"
                  - id: "2"
                    text: "Waiting for developer feedback"
                    
              - id: "3"
                title: "Buy Chocolates"
                description: "Buy Chocolates for Deepavali"
                category: "Household"
                priority: "Low"
                status: "Overdue"
                taskDate:
                  startDate: ""
                  dueDate: "31 Nov 2023"
                  finishDate: ""
                updates:
                  - id: "1"
                    text: "Purchased Chocolates"
                  - id: "2"
                    text: "Kept it at home for guests"

    post:
      description: >-
        You may create your own task. It takes a JSON object containing a 
        task details.
      summary: Create a new task
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: task
          in: body
          description: "A new Task"
          required: true
          schema:
            $ref: '#/definitions/TaskItem'
      responses:
        201:
          description: Task created successfully
          schema:
            $ref: '#/definitions/TaskItem'
          
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message
                
          examples:
            application/json:
              - id: "5"
                title: "Go for shopping"
                description: "Go for buying new Cars"
                category: "Personal"
                priority: "Ciritcal"
                status: "Not Started"
                taskDate:
                  startDate: ""
                  dueDate: "18 Dec 2023"
                  finishDate: ""
                updates: []
    
  /tasks/{taskId}:
    delete:
      summary: delete a task by taskID
      parameters:
        - in: path
          name: taskId
          type: string
          format: uuid
          required: true
          description: "Unique identifier of the task to be deleted"
          
      responses:
        204:
          description:
            Task deleted successfully
        404:
          description: Task not found
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message
                

    put:
      summary: Update a task by ID
      parameters:
        - in: path
          name: taskId
          type: string
          format: uuid
          required: true
          description: "Unique identifier of the task to be updated"
      consumes:
        - application/json
      produces:
        - application/json
      
      responses:
        200:
          description: Task updated successfully
          schema:
            $ref: '#/definitions/TaskItem'
        400:
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message
        
definitions:
  Updates:
    title: Updates
    type: object
    properties:
      id: 
        type: string
        format: uuid
      text:
        type: string
    required:
      - id
      - text
    
  TaskDate:
    title: TaskDate
    type: object
    properties:
      startDate:
        type: string
      dueDate:
        type: string
      finishDate:
        type: string
    required:
      - dueDate
          
  TaskItem:
    title: TaskItem
    type: object
    properties:
      id:
        type: string
        format: uuid
      title:
        type: string
      description:
        type: string
      category:
        type: string
      priority:
        type: string
      status:
        type: string
      taskDate:
        $ref: '#/definitions/TaskDate'
      updates:
        type: array
        items:
          $ref: '#/definitions/Updates'
    required:
      - id
      - title

    example:
      id: "1"
      title: "Start new task"
      description: "Start next task activity"
      category: "Personal"
      priority: "Normal"
      status: "In Progress"
      taskDate:
        startDate: "8 Nov 2023"
        dueDate: "23 Nov 2023"
        finishDate: "22 Nov 2023"
      updates:
        - id: "1"
          text: "Start new project"
        - id: "2"
          text: "Do the task"
        - id: "3"
          text: "Task completed"
